<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>ChatVerse - Group Chat</title>
  <link rel="stylesheet" href="/group.css" />
  <link rel="icon" href="/uploads/logo.png" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"/>
</head>
<body>
  <div class="chatverse-container">
    <aside class="sidebar">
      <div class="logo">üí¨ <span>ChatVerse</span></div>
      <div class="welcome-bar">
        <div class="Welcome-name">Welcome, <%= currentUser.username %>!</div>
        <div class="logout">
          <form action="/logout" method="POST">
            <button type="submit">Logout</button>
          </form>
        </div>
        <div class="chat-toggle">
          <button id="private-toggle" class="toggle-btn" onclick="window.location.href='/users'">
            <i class="fas fa-user-friends"></i> Private Chat
          </button>
          <button id="group-toggle" class="toggle-btn active" onclick="window.location.href='/groupchat'">
            <i class="fas fa-users"></i> Group Chat
          </button>
        </div>
        <div class="add-group-wrapper">
          <button id="sidebarAddGroupBtn">
            <i class="fas fa-plus-circle"></i> Create New Group
          </button>
        </div>
      </div>
      <div class="search">
        <input type="text" id="user-search" placeholder="Search users..." />
      </div>
      <h2>Your Groups</h2>
      <div id="group-list">
        <% groups.forEach(group => { %>
          <div class="user-card group-card" data-id="<%= group._id %>">
            <div class="user-info">
              <img src="/uploads/group.webp" alt="Group Icon" class="user-avatar" />
              <div class="user-name"><%= group.name %> ‚Äî Members: <%= group.members.length %></div>
            </div>
          </div>
        <% }) %>
      </div>

      <div id="createGroupModal" class="modal-overlay hidden">
        <div class="modal-content animated-modal">
          <h2 class="modal-title">‚ú® Create New Group</h2>
          <form id="createGroupForm">
            <input type="text" id="groupNameInput" placeholder="Enter group name..." required />
            <div class="user-list" id="userListContainer">
              <% users.forEach(user => { %>
                <label class="user-checkbox">
                  <input type="checkbox" name="members" value="<%= user._id %>">
                  <span><%= user.username %></span>
                </label>
              <% }) %>
            </div>
            <div class="modal-buttons">
              <button type="submit" class="create-btn">üöÄ Create</button>
              <button type="button" id="cancelCreateGroup" class="cancel-btn">‚ùå Cancel</button>
            </div>
          </form>
        </div>
      </div>
    </aside>

    <main class="chat-area">
      <div class="chat-header">
        <a class="back-button" href="/groupchat"><i class="fa-solid fa-arrow-left"></i></a>
        <h3><%= group.name %></h3>
      </div>

      <div id="chat-box">
        <% chats.forEach(chat => {
          const isSent = chat.from._id.toString() === currentUser._id.toString();
        %>
          <div class="message <%= isSent ? 'sent' : 'received' %>" id="msg-<%= chat._id %>">
            <strong><%= isSent ? '' : chat.from.username %></strong> <p><%= chat.msg %></p>
            <span class="timestamp">
              <%= new Date(chat.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %>
              <% if (isSent) { %>
                <i class="fa fa-check tick-single" id="tick-<%= chat._id %>"></i>
              <% } %>
            </span>
          </div>
        <% }) %>
      </div>

      <form id="form">
        <input id="input" autocomplete="off" placeholder="Type a message..." />
        <button type="submit">Send</button>
      </form>
    </main>
  </div>

  <audio id="chat-sound" src="/uploads/message-send-292621.mp3" preload="auto"></audio>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const chatBox = document.getElementById('chat-box');
    const input = document.getElementById('input');
    const form = document.getElementById('form');
    const chatSound = document.getElementById('chat-sound');
    const currentUserId = '<%= currentUser._id %>';
    const groupId = '<%= group._id %>';

    function playSound() {
      chatSound.currentTime = 0;
      chatSound.play().catch(e => console.log("Sound blocked:", e));
    }

    socket.emit('join group', groupId);
    socket.emit('register', currentUserId);

    form.addEventListener('submit', e => {
      e.preventDefault();
      const message = input.value.trim();
      if (message) {
        socket.emit('group message', {
          groupId,
          from: currentUserId,
          msg: message
        });
        input.value = '';
        playSound();
      }
    });

    socket.on('group message', data => {
      const isSent = data.from._id === currentUserId;
      const msgDiv = document.createElement('div');
      msgDiv.className = 'message ' + (isSent ? 'sent' : 'received');
      msgDiv.id = `msg-${data._id}`;

      let tickClass = 'tick-single';
      if (data.readBy?.includes(currentUserId)) tickClass = 'tick-read';
      else if (data.deliveredTo?.includes(currentUserId)) tickClass = 'tick-double';

      const tickIcon = isSent
        ? `<i class="fa fa-check ${tickClass}" id="tick-${data._id}"></i>`
        : '';

      msgDiv.innerHTML = `
        <strong>${isSent ? '' : data.from.username}</strong><p>${data.msg}</p>
        <span class="timestamp">
          ${new Date(data.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
          ${tickIcon}
        </span>
      `;

      chatBox.appendChild(msgDiv);
      chatBox.scrollTop = chatBox.scrollHeight;

      if (!isSent) {
        socket.emit('delivered group message', { messageId: data._id, userId: currentUserId });
        setTimeout(() => {
          socket.emit('read group message', { messageId: data._id, userId: currentUserId });
        }, 1000);
      }

      playSound();
    });

    socket.on('group message delivered', ({ messageId }) => {
      const tick = document.getElementById(`tick-${messageId}`);
      if (tick) {
        tick.classList.remove('tick-single');
        tick.classList.add('tick-double');
      }
    });

    socket.on('group message read', ({ messageId }) => {
      const tick = document.getElementById(`tick-${messageId}`);
      if (tick) {
        tick.classList.remove('tick-single', 'tick-double');
        tick.classList.add('tick-read');
      }
    });

    document.getElementById('sidebarAddGroupBtn').addEventListener('click', () => {
      document.getElementById('createGroupModal').classList.remove('hidden');
    });

    document.getElementById('cancelCreateGroup').addEventListener('click', () => {
      document.getElementById('createGroupModal').classList.add('hidden');
    });

    document.getElementById('createGroupForm').addEventListener('submit', async function (event) {
      event.preventDefault();
      const groupName = document.getElementById('groupNameInput').value;
      const members = Array.from(document.querySelectorAll('input[name="members"]:checked')).map(input => input.value);
      try {
        const response = await fetch('/create/group', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name: groupName, members })
        });
        if (response.ok) {
          alert('Group created successfully!');
          window.location.reload();
        } else {
          alert('Error creating group. Please try again.');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error creating group. Please try again.');
      }
    });

    document.querySelectorAll('.group-card').forEach(card => {
      card.addEventListener('click', function () {
        const groupId = this.getAttribute('data-id');
        if (groupId) window.location.href = `/groupchat/${groupId}`;
      });
    });
  </script>
</body>
</html>
